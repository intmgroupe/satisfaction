
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - '*.*.*' # Push events to matching ex:20.15.10

name: Create release with tag
env:
  TAG_VALUE: ${GITHUB_REF/refs\/tags\//}
jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        id: build_
        env:
            GITHUB_NAME: ${{ github.event.repository.name }}
        run: |
          sudo apt-get install libxml-xpath-perl
          echo ::set-output name=version_itsmng::$(xpath -e '/root/versions/version[num="'${TAG_VALUE}'"]/compatibility/text()' "${GITHUB_NAME:-satisfaction}.xml")
          echo ::set-output name=tag::${TAG_VALUE}
          echo ${{ steps.getxml.outputs.info }}
          IFS='.' read -ra version_parts <<< "${TAG_VALUE}"
          last_part=$(( ${version_parts[-1]} - 1 ))
          prev_version=$(echo "${version_parts[@]:0:${#version_parts[@]}-1}.$last_part" | tr ' ' '.')
          bodyTXT=$(git log "$prev_version..HEAD" --pretty=format:"%s")
          echo ::set-output name=body::${bodyTXT}
          rm -rf "${GITHUB_NAME:-satisfaction}.xml" tools wiki screenshots test .git .github ISSUE_TEMPLATE.md TODO.txt "${GITHUB_NAME:-satisfaction}.png" 
          cd ..
          tar jcvf "itsmng-${GITHUB_NAME:-satisfaction}-${TAG_VALUE}.tar.bz2" "${GITHUB_NAME:-satisfaction}"
          ls -al
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: | 
                    itsmng ${{ steps.build_.outputs.version_itsmng }} : Version ${{ github.ref }} disponible / available
          body : Version ${{ steps.build_.outputs.tag }} released for itsmng ${{ steps.build_.outputs.version_itsmng }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_NAME: ${{ github.event.repository.name }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/${{ github.event.repository.name }}/itsmng-${{ github.event.repository.name }}-${{ steps.build_.outputs.tag }}.tar.bz2
          asset_name: itsmng-${{ github.event.repository.name }}-${{ steps.build_.outputs.tag }}.tar.bz2
          asset_content_type: application/zip
  
